<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.wms.outstoremanage.store.mapper.TOutStoreMapper">
    
    <resultMap type="TOutStore" id="TOutStoreResult">
        <result property="outid"    column="outid"    />
        <result property="outname"    column="outname"    />
        <result property="outtype"    column="outtype"    />
        <result property="outnum"    column="outnum"    />
        <result property="outtime"    column="outtime"    />
        <result property="sid"    column="sid"    />
    </resultMap>

    <sql id="selectTOutStoreVo">
        select outid, outname, outtype, outnum, outtime, sid from t_out_store
    </sql>

    <select id="selectTOutStoreList" parameterType="TOutStore" resultMap="TOutStoreResult">
        <include refid="selectTOutStoreVo"/>
        <where>  
            <if test="outname != null  and outname != ''"> and outname like concat('%', #{outname}, '%')</if>
            <if test="outtype != null  and outtype != ''"> and outtype = #{outtype}</if>
            <if test="outnum != null "> and outnum = #{outnum}</if>
            <if test="outtime != null "> and outtime = #{outtime}</if>
            <if test="sid != null "> and sid = #{sid}</if>
        </where>
    </select>
    
    <select id="selectTOutStoreById" parameterType="Integer" resultMap="TOutStoreResult">
        <include refid="selectTOutStoreVo"/>
        where outid = #{outid}
    </select>
        
    <insert id="insertTOutStore" parameterType="TOutStore" useGeneratedKeys="true" keyProperty="outid">
        insert into t_out_store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outname != null  and outname != ''">outname,</if>
            <if test="outtype != null  and outtype != ''">outtype,</if>
            <if test="outnum != null ">outnum,</if>
            <if test="outtime != null ">outtime,</if>
            <if test="sid != null ">sid,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outname != null  and outname != ''">#{outname},</if>
            <if test="outtype != null  and outtype != ''">#{outtype},</if>
            <if test="outnum != null ">#{outnum},</if>
            <if test="outtime != null ">#{outtime},</if>
            <if test="sid != null ">#{sid},</if>
         </trim>
    </insert>

    <update id="updateTOutStore" parameterType="TOutStore">
        update t_out_store
        <trim prefix="SET" suffixOverrides=",">
            <if test="outname != null  and outname != ''">outname = #{outname},</if>
            <if test="outtype != null  and outtype != ''">outtype = #{outtype},</if>
            <if test="outnum != null ">outnum = #{outnum},</if>
            <if test="outtime != null ">outtime = #{outtime},</if>
            <if test="sid != null ">sid = #{sid},</if>
        </trim>
        where outid = #{outid}
    </update>

    <delete id="deleteTOutStoreById" parameterType="Integer">
        delete from t_out_store where outid = #{outid}
    </delete>

    <delete id="deleteTOutStoreByIds" parameterType="String">
        delete from t_out_store where outid in 
        <foreach item="outid" collection="array" open="(" separator="," close=")">
            #{outid}
        </foreach>
    </delete>
    
</mapper>